{"version":3,"sources":["components/AppBar/AppBar.module.css","components/Exchanger/Exchanger.module.css","components/CurrencySelector/CurrencySelector.module.css","api/fetchCurrency.js","redux/forex/forexActions.js","redux/forex/forexOperations.js","redux/forex/forexSelectors.js","redux/forex/forexReducers.js","redux/store.js","components/Container/Container.js","components/AppBar/AppBar.js","components/CurrencySelector/CurrencySelector.js","containers/CurrencySelectorContainer.js","containers/AppBarContainer.js","components/CurrenciesTable/CurrenciesTable.js","containers/CurrenciesTableContainer.js","views/MainPage.js","hooks/useDebounce.js","components/Exchanger/Exchanger.js","containers/ExchangerContainer.js","App.js","index.js"],"names":["module","exports","API_KEY","fetchCurrentExchanges","baseCurrency","a","axios","get","data","conversion_rates","console","log","fetchCurrenciesPair","base","cpty","amount","conversion_result","fetchLatestCurrenciesStart","createAction","fetchLatestCurrenciesSuccess","fetchLatestCurrenciesError","setBaseCurrency","dispatch","getState","forexActions","forex","exchangeRates","createReducer","state","payload","error","fetchCurrenciesError","combineReducers","store","configureStore","reducer","forexReducers","devTools","process","Container","children","className","AppBar","s","exchangerHeader","exchangerNav","AppBarLink","activeClassName","AppBarLink__active","to","exact","CurrencySelector","startCurrency","handleCurrencyChange","handleBaseCurrencyChange","name","ratesKeyes","Object","keys","sort","handleChange","select","CurreSelector","value","onChange","e","target","map","rate","CurrencySelectorContainer","startCurrencyProp","useSelector","forexSelectors","startCurrencyFromStore","AppBarContainer","useDispatch","currency","type","toString","CurrenciesTable","getSymbolFromCurrency","CurrenciesTableContainer","MainPage","useDebounce","cb","delay","isMounted","isMountedRef","useRef","useEffect","current","useIsMounted","inputsRef","useCallback","debounce","leading","trailing","Exchanger","baseCurrencyState","cptyCurrencyState","handleCurrencyValueChange","disableFormSubmit","preventDefault","exchanger","exchangerTitle","currencyForm","onSubmit","currencyInput","autocomplete","INIT_BASE_CURRENCY","globalBaseCurrency","INIT_CPTY_CURRENCY","currencyReducer","ExchangerContainer","useReducer","baseCurrencyDispatch","cptyCurrencyDispatch","fetchCurrencyValue","baseCurrencyValue","cptyCurrencyValue","cptyCurrency","fetchedCptyValue","fetchedBaseValue","isNaN","App","forexOperations","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31a1f42c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"exchangerHeader\":\"AppBar_exchangerHeader__Rrmsu\",\"exchangerNav\":\"AppBar_exchangerNav__XQPh_\",\"AppBarLink\":\"AppBar_AppBarLink__gHa4M\",\"AppBarLink__active\":\"AppBar_AppBarLink__active__2cu1a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"exchanger\":\"Exchanger_exchanger__cGNW_\",\"exchangerTitle\":\"Exchanger_exchangerTitle__3vyfj\",\"currencyForm\":\"Exchanger_currencyForm__2zsdw\",\"currencyInput\":\"Exchanger_currencyInput__18eco\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"CurrencySelector_select__3e1G2\",\"select--multiple\":\"CurrencySelector_select--multiple__snnSV\",\"focus\":\"CurrencySelector_focus__2JyFw\"};","import axios from \"axios\";\n\nconst API_KEY = \"a88457b0c2762578a02fbe22\";\n\nconst fetchCurrentExchanges = async (baseCurrency) => {\n  try {\n    const { data } = await axios.get(\n      ` https://v6.exchangerate-api.com/v6/${API_KEY}/latest/${baseCurrency}`\n    );\n\n    return data.conversion_rates;\n  } catch (e) {\n    console.log(e);\n    throw e;\n  }\n};\n\nconst fetchCurrenciesPair = async (base, cpty, amount) => {\n  try {\n    if (!base || !cpty || !amount || +amount <= 0) {\n      return 0;\n    }\n    const { data } = await axios.get(\n      `https://v6.exchangerate-api.com/v6/${API_KEY}/pair/${base}/${cpty}/${amount} `\n    );\n\n    return data.conversion_result;\n  } catch (e) {\n    console.log(e);\n    throw e;\n  }\n};\n\nexport { fetchCurrentExchanges, fetchCurrenciesPair };\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst fetchLatestCurrenciesStart = createAction(\n  \"phonebook/fetchLatestCurrenciesStart\"\n);\nconst fetchLatestCurrenciesSuccess = createAction(\n  \"phonebook/fetchLatestCurreniesSuccess\"\n);\nconst fetchLatestCurrenciesError = createAction(\n  \"phonebook/fetchLatestCurreniesSuccess\"\n);\n\nconst setBaseCurrency = createAction(\"phonebook/setBaseCurrency\");\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  fetchLatestCurrenciesStart,\n  fetchLatestCurrenciesSuccess,\n  fetchLatestCurrenciesError,\n  setBaseCurrency,\n};\n","/* eslint-disable import/no-anonymous-default-export */\nimport { fetchCurrentExchanges } from \"../../api/fetchCurrency\";\nimport forexActions from \"./forexActions\";\n\nconst fetchLatestCurrencies = () => async (dispatch, getState) => {\n  dispatch(forexActions.fetchLatestCurrenciesStart());\n\n  const {\n    forex: { baseCurrency },\n  } = getState();\n\n  try {\n    const data = await fetchCurrentExchanges(baseCurrency);\n\n    dispatch(forexActions.fetchLatestCurrenciesSuccess(data));\n  } catch (error) {\n    dispatch(forexActions.fetchLatestCurrenciesError(error));\n  }\n};\n\nexport default {\n  fetchLatestCurrencies,\n};\n","/* eslint-disable import/no-anonymous-default-export */\n\nconst getExchangeRates = ({ forex }) => forex.exchangeRates;\n\nconst getBaseCurrency = ({ forex }) => forex.baseCurrency;\n\nconst getError = (state) => state.forex.error;\n\nexport default {\n  getExchangeRates,\n  getBaseCurrency,\n  getError,\n};\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nimport forexActions from \"./forexActions\";\n\nconst exchangeRates = createReducer(\n  {},\n  {\n    [forexActions.fetchLatestCurrenciesSuccess]: (state, { payload }) =>\n      payload,\n  }\n);\n\nconst baseCurrency = createReducer(\"EUR\", {\n  [forexActions.setBaseCurrency]: (state, { payload }) => payload,\n});\n\nconst error = createReducer(null, {\n  [forexActions.fetchCurrenciesError]: (state, { payload }) => payload,\n});\n\nexport default combineReducers({\n  exchangeRates,\n  baseCurrency,\n  error,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport { forexReducers } from \"./forex\";\n\nconst store = configureStore({\n  reducer: {\n    forex: forexReducers,\n  },\n\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import React from 'react';\nimport './Container.css';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport s from \"./AppBar.module.css\";\n\nconst AppBar = ({ children }) => (\n  <header className={s.exchangerHeader}>\n    <nav className={s.exchangerNav}>\n      <NavLink\n        className={s.AppBarLink}\n        activeClassName={s.AppBarLink__active}\n        to=\"/\"\n        exact\n      >\n        Main\n      </NavLink>\n      <NavLink\n        className={s.AppBarLink}\n        activeClassName={s.AppBarLink__active}\n        to=\"/exchange\"\n      >\n        Convert\n      </NavLink>\n    </nav>\n    {children}\n  </header>\n);\n\nexport default AppBar;\n","import React from \"react\";\n\nimport s from \"./CurrencySelector.module.css\";\n\nconst CurrencySelector = ({\n  startCurrency,\n  exchangeRates,\n  handleCurrencyChange,\n  handleBaseCurrencyChange,\n  name,\n}) => {\n  const ratesKeyes = Object.keys(exchangeRates).sort();\n\n  const handleChange = handleBaseCurrencyChange\n    ? handleBaseCurrencyChange\n    : handleCurrencyChange;\n\n  return (\n    <div className={s.select}>\n      <select\n        className={s.CurreSelector}\n        value={startCurrency}\n        name={name}\n        onChange={(e) => handleChange(e.target)}\n      >\n        {ratesKeyes.map((rate) => (\n          <option key={rate}>{rate}</option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default CurrencySelector;\n","import { useSelector } from \"react-redux\";\nimport { forexSelectors } from \"../redux/forex\";\n\nimport CurrencySelector from \"../components/CurrencySelector/CurrencySelector\";\n\nconst CurrencySelectorContainer = ({\n  startCurrencyProp,\n  handleBaseCurrencyChange,\n  handleCurrencyChange,\n  name,\n}) => {\n  const exchangeRates = useSelector(forexSelectors.getExchangeRates);\n\n  const startCurrencyFromStore = useSelector(forexSelectors.getBaseCurrency);\n\n  return (\n    <CurrencySelector\n      startCurrency={startCurrencyProp || startCurrencyFromStore}\n      exchangeRates={exchangeRates}\n      handleBaseCurrencyChange={handleBaseCurrencyChange}\n      handleCurrencyChange={handleCurrencyChange}\n      name={name}\n    />\n  );\n};\n\nexport default CurrencySelectorContainer;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { forexSelectors, forexActions } from \"../redux/forex\";\n\nimport AppBar from \"../components/AppBar/AppBar\";\nimport CurrencySelector from \"../containers/CurrencySelectorContainer\";\n\nconst AppBarContainer = () => {\n  const dispatch = useDispatch();\n\n  const baseCurrency = useSelector(forexSelectors.getBaseCurrency);\n\n  const setBaseCurrency = ({ value: currency }) => {\n    dispatch({\n      type: forexActions.setBaseCurrency.toString(),\n      payload: currency,\n    });\n  };\n\n  return (\n    <AppBar>\n      <CurrencySelector\n        startCurrency={baseCurrency}\n        handleBaseCurrencyChange={setBaseCurrency}\n      />\n    </AppBar>\n  );\n};\n\nexport default AppBarContainer;\n","import React from \"react\";\nimport getSymbolFromCurrency from \"currency-symbol-map\";\n\nimport \"./CurrenciesTable.css\";\n\nconst CurrenciesTable = ({ exchangeRates }) => {\n  const ratesKeyes = Object.keys(exchangeRates).sort();\n\n  return (\n    <table className=\"exchangeTable\">\n      <thead>\n        <tr>\n          <th>Converted currency </th>\n          <th>Exchange rate</th>\n        </tr>\n      </thead>\n      <tbody>\n        {ratesKeyes.map((rate) => (\n          <tr key={rate}>\n            <td>\n              <div className=\"currencyName\">\n                {getSymbolFromCurrency(rate) && (\n                  <span className=\"currencySymbol\">\n                    {getSymbolFromCurrency(rate)}\n                  </span>\n                )}\n                {rate}\n              </div>\n            </td>\n            <td>{exchangeRates[rate]}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default CurrenciesTable;\n","import { useSelector } from \"react-redux\";\n\nimport { forexSelectors } from \"../redux/forex\";\n\nimport CurrenciesTable from \"../components/CurrenciesTable/CurrenciesTable\";\n\nconst CurrenciesTableContainer = () => {\n  const exchangeRates = useSelector((state) =>\n    forexSelectors.getExchangeRates(state)\n  );\n\n  return <CurrenciesTable exchangeRates={exchangeRates} />;\n};\n\nexport default CurrenciesTableContainer;\n","import CurrenciesTableContainer from \"../containers/CurrenciesTableContainer\";\n\nconst MainPage = () => {\n  return <CurrenciesTableContainer />;\n};\n\nexport default MainPage;\n","import debounce from \"lodash.debounce\";\nimport { useEffect, useCallback, useRef } from \"react\";\n\nfunction useIsMounted() {\n  const isMountedRef = useRef(true);\n  useEffect(() => {\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n  return () => isMountedRef.current;\n}\n\nfunction useDebounce(cb, delay) {\n  const options = {\n    leading: false,\n    trailing: true,\n  };\n\n  const isMounted = useIsMounted();\n  const inputsRef = useRef(cb); // mutable ref like with useThrottle\n  useEffect(() => {\n    inputsRef.current = { cb, delay };\n  }); //also track cur. delay\n  return useCallback(\n    debounce(\n      (...args) => {\n        // Debounce is an async callback. Cancel it, if in the meanwhile\n        // (1) component has been unmounted (see isMounted in snippet)\n        // (2) delay has changed\n        if (inputsRef.current.delay === delay && isMounted())\n          inputsRef.current.cb(...args);\n      },\n      delay,\n      options\n    ),\n    [delay, debounce]\n  );\n}\n\nexport default useDebounce;\n","import CurrencySelector from \"../../containers/CurrencySelectorContainer\";\nimport s from \"./Exchanger.module.css\";\n\nconst Exchanger = ({\n  baseCurrencyState,\n  cptyCurrencyState,\n  handleCurrencyValueChange,\n  handleCurrencyChange,\n}) => {\n  const disableFormSubmit = (e) => e.preventDefault();\n  return (\n    <section className={s.exchanger}>\n      <h3 className={s.exchangerTitle}>Convert your currency</h3>\n      <form className={s.currencyForm} onSubmit={disableFormSubmit}>\n        <input\n          name=\"base\"\n          type=\"number\"\n          className={s.currencyInput}\n          value={baseCurrencyState.value}\n          onChange={handleCurrencyValueChange}\n          autocomplete=\"off\"\n        />\n        <CurrencySelector\n          handleCurrencyChange={handleCurrencyChange}\n          startCurrencyProp={baseCurrencyState.currency}\n          name={\"base\"}\n        />\n      </form>\n      <form className={s.currencyForm} onSubmit={disableFormSubmit}>\n        <input\n          type=\"number\"\n          name=\"cpty\"\n          className={s.currencyInput}\n          value={cptyCurrencyState.value}\n          onChange={handleCurrencyValueChange}\n          autocomplete=\"off\"\n        />\n        <CurrencySelector\n          handleCurrencyChange={handleCurrencyChange}\n          startCurrencyProp={cptyCurrencyState.currency}\n          name={\"cpty\"}\n        />\n      </form>\n    </section>\n  );\n};\n\nexport default Exchanger;\n","import { useSelector } from \"react-redux\";\nimport { useReducer } from \"react\";\n\nimport { fetchCurrenciesPair } from \"../api/fetchCurrency\";\nimport useDebounce from \"../hooks/useDebounce\";\nimport { forexSelectors } from \"../redux/forex\";\n\nimport Exchanger from \"../components/Exchanger/Exchanger\";\n\nconst INIT_BASE_CURRENCY = (globalBaseCurrency) => ({\n  currency: globalBaseCurrency,\n  value: \"\",\n});\n\nconst INIT_CPTY_CURRENCY = {\n  currency: \"USD\",\n  value: \"\",\n};\n\nconst currencyReducer = (state, { type, payload }) => {\n  switch (type) {\n    case \"changeValue\":\n      return { ...state, value: payload };\n    case \"changeCurrency\":\n      return { ...state, currency: payload };\n    default:\n      return state;\n  }\n};\n\nconst ExchangerContainer = () => {\n  const baseCurrency = useSelector(forexSelectors.getBaseCurrency);\n  const [baseCurrencyState, baseCurrencyDispatch] = useReducer(\n    currencyReducer,\n    baseCurrency,\n    INIT_BASE_CURRENCY\n  );\n\n  const [cptyCurrencyState, cptyCurrencyDispatch] = useReducer(\n    currencyReducer,\n    INIT_CPTY_CURRENCY\n  );\n\n  const fetchCurrency = async ({\n    baseCurrencyValue,\n    cptyCurrencyValue,\n    baseCurrency,\n    cptyCurrency,\n  }) => {\n    try {\n      if (baseCurrencyValue) {\n        const fetchedCptyValue = await fetchCurrenciesPair(\n          baseCurrencyState.currency,\n          cptyCurrencyState.currency,\n          baseCurrencyValue\n        );\n        return cptyCurrencyDispatch({\n          type: \"changeValue\",\n          payload: fetchedCptyValue,\n        });\n      }\n      if (cptyCurrencyValue) {\n        const fetchedBaseValue = await fetchCurrenciesPair(\n          cptyCurrencyState.currency,\n          baseCurrencyState.currency,\n          cptyCurrencyValue\n        );\n        return baseCurrencyDispatch({\n          type: \"changeValue\",\n          payload: fetchedBaseValue,\n        });\n      }\n      if (baseCurrency) {\n        const fetchedCptyValue = await fetchCurrenciesPair(\n          baseCurrency,\n          cptyCurrencyState.currency,\n          baseCurrencyState.value\n        );\n\n        return cptyCurrencyDispatch({\n          type: \"changeValue\",\n          payload: fetchedCptyValue,\n        });\n      }\n      if (cptyCurrency) {\n        const fetchedCptyValue = await fetchCurrenciesPair(\n          cptyCurrency,\n          baseCurrencyState.currency,\n          cptyCurrencyState.value\n        );\n        return baseCurrencyDispatch({\n          type: \"changeValue\",\n          payload: fetchedCptyValue,\n        });\n      }\n    } catch (e) {\n      cptyCurrencyDispatch(INIT_CPTY_CURRENCY);\n      baseCurrencyDispatch(INIT_BASE_CURRENCY(baseCurrency));\n    }\n  };\n\n  const fetchCurrencyValue = useDebounce(fetchCurrency, 500);\n\n  const handleCurrencyValueChange = ({ target: { value, name } }) => {\n    if (isNaN(+value)) {\n      return;\n    }\n    if (name === \"base\") {\n      baseCurrencyDispatch({ type: \"changeValue\", payload: value });\n      return fetchCurrencyValue({ baseCurrencyValue: value });\n    }\n    cptyCurrencyDispatch({ type: \"changeValue\", payload: value });\n    return fetchCurrencyValue({ cptyCurrencyValue: value });\n  };\n\n  const handleCurrencyChange = ({ value, name }) => {\n    if (name === \"base\") {\n      baseCurrencyDispatch({ type: \"changeCurrency\", payload: value });\n      return fetchCurrencyValue({ baseCurrency: value });\n    }\n    cptyCurrencyDispatch({ type: \"changeCurrency\", payload: value });\n    return fetchCurrencyValue({ cptyCurrency: value });\n  };\n\n  return (\n    <Exchanger\n      baseCurrencyState={baseCurrencyState}\n      cptyCurrencyState={cptyCurrencyState}\n      handleCurrencyValueChange={handleCurrencyValueChange}\n      handleCurrencyChange={handleCurrencyChange}\n    />\n  );\n};\n\nexport default ExchangerContainer;\n","import React, { useEffect } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Container from \"./components/Container\";\nimport AppBar from \"./containers/AppBarContainer\";\nimport MainPage from \"./views/MainPage\";\nimport Exchanger from \"./containers/ExchangerContainer\";\nimport { forexOperations, forexSelectors } from \"./redux/forex\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const baseCurrency = useSelector(forexSelectors.getBaseCurrency);\n\n  useEffect(() => {\n    dispatch(forexOperations.fetchLatestCurrencies());\n  }, [dispatch, baseCurrency]);\n\n  return (\n    <Container>\n      <AppBar />\n      <Switch>\n        <Route exact path=\"/\" component={MainPage}></Route>\n        <Route exact path=\"/exchange\" component={Exchanger}></Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\n\nimport store from \"./redux/store\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}